<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.codehaus.redback.components</groupId>
    <artifactId>redback-components</artifactId>
    <version>1.3-SNAPSHOT</version>
    <relativePath>../redback-components-parent/pom.xml</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>spring-jdo2</artifactId>
  <name>Spring JDO2 Component</name>
  <version>1.1-SNAPSHOT</version>
  <inceptionYear>2005</inceptionYear>

  <url>http://redback.codehaus.org/components/${project.artifactId}</url>

  <distributionManagement>
    <site>
      <id>codehaus.org</id>
      <url>dav:https://dav.codehaus.org/redback/components/${project.artifactId}</url>
    </site>
  </distributionManagement>

  <scm>
    <connection>scm:svn:https://svn.codehaus.org/redback/components/trunk/spring-jdo2</connection>
    <developerConnection>scm:svn:https://svn.codehaus.org/redback/components/trunk/spring-jdo2</developerConnection>
    <url>http://fisheye.codehaus.org/browse/redback/components/trunk/spring-jdo2</url>
  </scm>

  <developers>
    <developer>
      <id>3</id>
      <name>David Wynter</name>
      <email>david (at) dwynter.plus.com</email>
      <organization>STPenable Ltd.</organization>
      <timezone>UTC+0</timezone>
    </developer>
  </developers>
  <dependencies>
    <dependency>
      <groupId>javax.jdo</groupId>
      <artifactId>jdo2-api</artifactId>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4jVersion}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>jpox</groupId>
      <artifactId>jpox</artifactId>
      <version>1.1.6</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>jdbc-stdext</artifactId>
          <groupId>javax.sql</groupId>
        </exclusion>
        <exclusion>
          <groupId>javax.resource</groupId>
          <artifactId>connector</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.transaction</groupId>
          <artifactId>jta</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.7</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- I Couldn't get the test classes to generate from modello.
           So I just placed the pre-generated classes into the src/test/* tree instead.
           I left this configuration in here to allow others to possibly get this
           automatic approach to work out.
           - Joakim
        -->
      <!--
      <plugin>
        <groupId>org.codehaus.modello</groupId>
        <artifactId>modello-maven-plugin</artifactId>
        <version>1.0-alpha-9</version>
        <configuration>
          <version>1.0.0</version>
          <packageWithVersion>false</packageWithVersion>
          <model>src/test/mdo/testobjects.xml</model>
        </configuration>
        <executions>
          <execution>
            <id>generate-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <outputDirectory>target/test-generated-sources/modello</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>generate-jdo-mappings</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>jpox-jdo-mapping</goal>
            </goals>
            <configuration>
              <outputDirectory>target/test-classes</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
       -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jpox-maven-plugin</artifactId>
        <version>1.1.7</version>
        <executions>
          <execution>
            <phase>test-compile</phase>
            <goals>
              <goal>enhance</goal>
            </goals>
            <configuration>
              <classes>${basedir}/target/test-classes</classes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
